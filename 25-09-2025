120. Triangle

class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();
      
        int[] ans = new int[n + 1];
      
        for (int i = n - 1; i >= 0; i--) {
            for (int j = 0; j <= i; j++) {
                ans[j] = Math.min(ans[j], ans[j + 1]) + triangle.get(i).get(j);
            }
        }
        return ans[0];
    }
}

 
136. Single Number
Compare two at a time and return if not equal.
If all the pairs are equal then the last term is unique therefore return the last element.

class Solution {
    public int singleNumber(int[] nums) {
        int i = 0, j = i+1;
        int n = nums.length;
        Arrays.sort(nums);
        while (i<n && j<n){
            if(nums[i] != nums[j]) return nums[i];
            i+= 2;
            j+= 2;
        }
        return nums[n-1];
    }
}
