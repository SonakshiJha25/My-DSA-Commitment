206. Reverse Linked List

class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;
        while(curr != null){
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }
}

136. Single Number

//Using XOR => a ^ a = 0 and a ^ 0 = a
class Solution {
    public int singleNumber(int[] nums) {
        int ans = 0;
        for (int num : nums) ans ^= num;
        return ans;
    }
}

137. Single Number II

class Solution {
    public int singleNumber(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);
        int i = 0;
        while(i < n-2){
            int x = nums[i];
            int y = nums[i+1];
            if(x!=y) return x;
            i += 3; 
        }        
        return nums[n-1];
    }
}
